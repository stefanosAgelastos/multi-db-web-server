version: "3.1"

services:
  neo4j: # documentation https://thibaut-deveraux.medium.com/how-to-install-neo4j-with-docker-compose-36e3ba939af0
    image: neo4j:3.5
    restart: unless-stopped
    ports:
      - 7474:7474
      - 7687:7687
    # volumes:
    #   - ./conf:/conf
    #   - ./data:/data
    #   - ./import:/import
    #   - ./logs:/logs
    #   - ./plugins:/plugins
    environment:
      # Raise memory limits
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms.memory.heap.initial_size=1G
      - NEO4J_dbms_memory_heap_max__size=1G
      - NEO4J_AUTH=neo4j/password
  mysql_container:
    image: mysql:8.0
    ports:
      - 3306:3306
    environment:
      # here you set the root user's password for the new database
      MYSQL_ROOT_PASSWORD: databases
    volumes:
      - sqldb:/var/lib/mysql
      # this mounts the repo's ./sql directory to the container's init directory
      # the scripts will run only when the volume is removed with docker-compose down -v
      # search for docker-entrypoint-initdb in the docs: https://hub.docker.com/_/mysql
      - ./sql/:/docker-entrypoint-initdb.d/
  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: helpdev
      MONGO_INITDB_ROOT_PASSWORD: 123456
    ports:
      - "27017:27017"
    volumes:
      - ./mongo/init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  #  app_container:
volumes:
  sqldb:
